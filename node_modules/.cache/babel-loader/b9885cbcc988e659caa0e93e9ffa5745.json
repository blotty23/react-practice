{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emmablott/repos/practice-react/src/components/Product/Hook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport './Hook.css';\nconst products = [{\n  emoji: '🍦',\n  name: 'ice cream',\n  price: 5\n}, {\n  emoji: '🍩',\n  name: 'donuts',\n  price: 2.5\n}, {\n  emoji: '🍉',\n  name: 'watermelon',\n  price: 4\n}];\nconst currencyOptions = {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n};\n\nfunction getTotal(total) {\n  return total.toLocaleString(undefined, currencyOptions);\n}\n\nfunction cartReducer(state, product) {\n  return [...state, product];\n}\n\nfunction totalReducer(state, price) {\n  return state + price;\n}\n\nexport default function Product() {\n  _s();\n\n  const [cart, setCart] = useReducer(cartReducer, []);\n  const [total, setTotal] = useReducer(totalReducer, 0);\n\n  function add(product) {\n    setCart(product.name);\n    setTotal(current => current + product.price);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Shopping Cart: \", cart.length, \" total items.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total: \", getTotal(total)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": product.name,\n            children: product.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => add(product),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, product.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"ssKRg8d+5EnIC2mnZyX1kcc59H4=\");\n\n_c = Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/emmablott/repos/practice-react/src/components/Product/Hook.js"],"names":["React","useReducer","useState","products","emoji","name","price","currencyOptions","minimumFractionDigits","maximumFractionDigits","getTotal","total","toLocaleString","undefined","cartReducer","state","product","totalReducer","Product","cart","setCart","setTotal","add","current","length","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADe,EAMf;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANe,EAWf;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAXe,CAAjB;AAkBA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,qBAAqB,EAAE,CADD;AAEtBC,EAAAA,qBAAqB,EAAE;AAFD,CAAxB;;AAKA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAOA,KAAK,CAACC,cAAN,CAAqBC,SAArB,EAA+BN,eAA/B,CAAP;AACD;;AACD,SAASO,WAAT,CAAqBC,KAArB,EAA2BC,OAA3B,EAAoC;AAClC,SAAO,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CAAP;AACD;;AACD,SAASC,YAAT,CAAsBF,KAAtB,EAA6BT,KAA7B,EAAoC;AAClC,SAAOS,KAAK,GAAGT,KAAf;AACD;;AAED,eAAe,SAASY,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,UAAU,CAACa,WAAD,EAAc,EAAd,CAAlC;AACA,QAAM,CAACH,KAAD,EAAQU,QAAR,IAAoBpB,UAAU,CAACgB,YAAD,EAAe,CAAf,CAApC;;AAEA,WAASK,GAAT,CAAaN,OAAb,EAAsB;AACpBI,IAAAA,OAAO,CAACJ,OAAO,CAACX,IAAT,CAAP;AACAgB,IAAAA,QAAQ,CAACE,OAAO,IAAIA,OAAO,GAAGP,OAAO,CAACV,KAA9B,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,oCACkBa,IAAI,CAACK,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,4BAAad,QAAQ,CAACC,KAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBACGR,QAAQ,CAACsB,GAAT,CAAaT,OAAO,iBACnB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCAAyB;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,0BAAYA,OAAO,CAACX,IAArC;AAAA,sBAA4CW,OAAO,CAACZ;AAApD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMkB,GAAG,CAACN,OAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUA,OAAO,CAACX,IAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1BuBa,O;;KAAAA,O","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './Hook.css';\n\nconst products = [\n  {\n    emoji: '🍦',\n    name: 'ice cream',\n    price: 5\n  },\n  {\n    emoji: '🍩',\n    name: 'donuts',\n    price: 2.5,\n  },\n  {\n    emoji: '🍉',\n    name: 'watermelon',\n    price: 4\n  }\n];\n\nconst currencyOptions = {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n}\n\nfunction getTotal(total) {\n  return total.toLocaleString(undefined,currencyOptions)\n}\nfunction cartReducer(state,product) {\n  return [...state, product]\n}\nfunction totalReducer(state, price) {\n  return state + price\n}\n\nexport default function Product() {\n  const [cart, setCart] = useReducer(cartReducer, []);\n  const [total, setTotal] = useReducer(totalReducer, 0);\n\n  function add(product) {\n    setCart(product.name);\n    setTotal(current => current + product.price);\n  }\n\n  return(\n    <div className=\"wrapper\">\n      <div>\n        Shopping Cart: {cart.length} total items.\n      </div>\n      <div>Total: {getTotal(total)}</div>\n      <div>\n        {products.map(product => (\n          <div key={product.name}>\n            <div className=\"product\"><span role=\"img\" aria-label={product.name}>{product.emoji}</span></div>\n            <button onClick={() => add(product)}>Add</button> \n            <button>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}